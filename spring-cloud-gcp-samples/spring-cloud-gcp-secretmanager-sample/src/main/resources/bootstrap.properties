# Set this setting to true if you want to load your GCP secrets as a
# property source for your application.
spring.cloud.gcp.secretmanager.bootstrap.enabled=true

# This optional setting adds a prefix to your secret property names that get
# injected into the application Environment.
spring.cloud.gcp.secretmanager.secret-name-prefix=secrets.

# You can specify the version of your secret like this example
# Pattern: spring.cloud.gcp.secretmanager.versions.<secretId>=<version>
#spring.cloud.gcp.secretmanager.versions.application-secret=1

# You can directly load the secret into a variable like this example
# This demonstrates multiple ways of loading the same application secret using template syntax.
my-application-secret-1=${secrets.application-secret}
my-application-secret-2=${gcp-secret/projects/my-kubernetes-codelab-217414/secrets/application-secret}
my-application-secret-3=${gcp-secret/projects/my-kubernetes-codelab-217414/secrets/application-secret/version/latest}
my-application-secret-4=${gcp-secret/my-kubernetes-codelab-217414/application-secret/latest}
my-application-secret-5=${gcp-secret/application-secret}
